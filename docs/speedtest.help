Python Library Documentation: module speedtest

NAME
    speedtest

DESCRIPTION
    # -*- coding: utf-8 -*-
    # Copyright 2012 Matt Martz
    # All Rights Reserved.
    #
    #    Licensed under the Apache License, Version 2.0 (the "License"); you may
    #    not use this file except in compliance with the License. You may obtain
    #    a copy of the License at
    #
    #         http://www.apache.org/licenses/LICENSE-2.0
    #
    #    Unless required by applicable law or agreed to in writing, software
    #    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
    #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
    #    License for the specific language governing permissions and limitations
    #    under the License.

CLASSES
    builtins.Exception(builtins.BaseException)
        SpeedtestException
            InvalidServerIDType
            InvalidSpeedtestMiniServer
            NoMatchedServers
            ShareResultsConnectFailure
            ShareResultsSubmitFailure
            SpeedtestBestServerFailure
            SpeedtestCLIError
            SpeedtestConfigError
            SpeedtestHTTPError
                ConfigRetrievalError
                ServersRetrievalError
            SpeedtestMiniConnectFailure
            SpeedtestMissingBestServer
            SpeedtestServersError
            SpeedtestUploadTimeout
    builtins.object
        FakeShutdownEvent
        HTTPUploaderData
        Speedtest
        SpeedtestResults
    gzip.GzipFile(_compression.BaseStream)
        GzipDecodedResponse
    http.client.HTTPConnection(builtins.object)
        SpeedtestHTTPConnection
    http.client.HTTPSConnection(http.client.HTTPConnection)
        SpeedtestHTTPSConnection
    threading.Thread(builtins.object)
        HTTPDownloader
        HTTPUploader
    urllib.request.AbstractHTTPHandler(urllib.request.BaseHandler)
        SpeedtestHTTPHandler
        SpeedtestHTTPSHandler
    
    class ConfigRetrievalError(SpeedtestHTTPError)
     |  Could not retrieve config.php
     |  
     |  Method resolution order:
     |      ConfigRetrievalError
     |      SpeedtestHTTPError
     |      SpeedtestException
     |      builtins.Exception
     |      builtins.BaseException
     |      builtins.object
     |  
     |  Data descriptors inherited from SpeedtestException:
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from builtins.Exception:
     |  
     |  __init__(self, /, *args, **kwargs)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from builtins.Exception:
     |  
     |  __new__(*args, **kwargs) from builtins.type
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from builtins.BaseException:
     |  
     |  __delattr__(self, name, /)
     |      Implement delattr(self, name).
     |  
     |  __getattribute__(self, name, /)
     |      Return getattr(self, name).
     |  
     |  __reduce__(...)
     |      Helper for pickle.
     |  
     |  __repr__(self, /)
     |      Return repr(self).
     |  
     |  __setattr__(self, name, value, /)
     |      Implement setattr(self, name, value).
     |  
     |  __setstate__(...)
     |  
     |  __str__(self, /)
     |      Return str(self).
     |  
     |  with_traceback(...)
     |      Exception.with_traceback(tb) --
     |      set self.__traceback__ to tb and return self.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from builtins.BaseException:
     |  
     |  __cause__
     |      exception cause
     |  
     |  __context__
     |      exception context
     |  
     |  __dict__
     |  
     |  __suppress_context__
     |  
     |  __traceback__
     |  
     |  args
    
    class FakeShutdownEvent(builtins.object)
     |  Class to fake a threading.Event.isSet so that users of this module
     |  are not required to register their own threading.Event()
     |  
     |  Static methods defined here:
     |  
     |  isSet()
     |      Dummy method to always return false
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  __dict__
     |      dictionary for instance variables (if defined)
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
    
    class GzipDecodedResponse(gzip.GzipFile)
     |  GzipDecodedResponse(response)
     |  
     |  A file-like object to decode a response encoded with the gzip
     |  method, as described in RFC 1952.
     |  
     |  Largely copied from ``xmlrpclib``/``xmlrpc.client`` and modified
     |  to work for py2.4-py3
     |  
     |  Method resolution order:
     |      GzipDecodedResponse
     |      gzip.GzipFile
     |      _compression.BaseStream
     |      io.BufferedIOBase
     |      _io._BufferedIOBase
     |      io.IOBase
     |      _io._IOBase
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __init__(self, response)
     |      Constructor for the GzipFile class.
     |      
     |      At least one of fileobj and filename must be given a
     |      non-trivial value.
     |      
     |      The new class instance is based on fileobj, which can be a regular
     |      file, an io.BytesIO object, or any other object which simulates a file.
     |      It defaults to None, in which case filename is opened to provide
     |      a file object.
     |      
     |      When fileobj is not None, the filename argument is only used to be
     |      included in the gzip file header, which may include the original
     |      filename of the uncompressed file.  It defaults to the filename of
     |      fileobj, if discernible; otherwise, it defaults to the empty string,
     |      and in this case the original filename is not included in the header.
     |      
     |      The mode argument can be any of 'r', 'rb', 'a', 'ab', 'w', 'wb', 'x', or
     |      'xb' depending on whether the file will be read or written.  The default
     |      is the mode of fileobj if discernible; otherwise, the default is 'rb'.
     |      A mode of 'r' is equivalent to one of 'rb', and similarly for 'w' and
     |      'wb', 'a' and 'ab', and 'x' and 'xb'.
     |      
     |      The compresslevel argument is an integer from 0 to 9 controlling the
     |      level of compression; 1 is fastest and produces the least compression,
     |      and 9 is slowest and produces the most compression. 0 is no compression
     |      at all. The default is 9.
     |      
     |      The mtime argument is an optional numeric timestamp to be written
     |      to the last modification time field in the stream when compressing.
     |      If omitted or None, the current time is used.
     |  
     |  close(self)
     |      Flush and close the IO object.
     |      
     |      This method has no effect if the file is already closed.
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes defined here:
     |  
     |  __abstractmethods__ = frozenset()
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from gzip.GzipFile:
     |  
     |  __repr__(self)
     |      Return repr(self).
     |  
     |  fileno(self)
     |      Invoke the underlying file object's fileno() method.
     |      
     |      This will raise AttributeError if the underlying file object
     |      doesn't support fileno().
     |  
     |  flush(self, zlib_mode=2)
     |      Flush write buffers, if applicable.
     |      
     |      This is not implemented for read-only and non-blocking streams.
     |  
     |  peek(self, n)
     |  
     |  read(self, size=-1)
     |      Read and return up to n bytes.
     |      
     |      If the argument is omitted, None, or negative, reads and
     |      returns all data until EOF.
     |      
     |      If the argument is positive, and the underlying raw stream is
     |      not 'interactive', multiple raw reads may be issued to satisfy
     |      the byte count (unless EOF is reached first).  But for
     |      interactive raw streams (as well as sockets and pipes), at most
     |      one raw read will be issued, and a short result does not imply
     |      that EOF is imminent.
     |      
     |      Returns an empty bytes object on EOF.
     |      
     |      Returns None if the underlying raw stream was open in non-blocking
     |      mode and no data is available at the moment.
     |  
     |  read1(self, size=-1)
     |      Implements BufferedIOBase.read1()
     |      
     |      Reads up to a buffer's worth of data if size is negative.
     |  
     |  readable(self)
     |      Return whether object was opened for reading.
     |      
     |      If False, read() will raise OSError.
     |  
     |  readline(self, size=-1)
     |      Read and return a line from the stream.
     |      
     |      If size is specified, at most size bytes will be read.
     |      
     |      The line terminator is always b'\n' for binary files; for text
     |      files, the newlines argument to open can be used to select the line
     |      terminator(s) recognized.
     |  
     |  rewind(self)
     |      Return the uncompressed stream file position indicator to the
     |      beginning of the file
     |  
     |  seek(self, offset, whence=0)
     |      Change stream position.
     |      
     |      Change the stream position to the given byte offset. The offset is
     |      interpreted relative to the position indicated by whence.  Values
     |      for whence are:
     |      
     |      * 0 -- start of stream (the default); offset should be zero or positive
     |      * 1 -- current stream position; offset may be negative
     |      * 2 -- end of stream; offset is usually negative
     |      
     |      Return the new absolute position.
     |  
     |  seekable(self)
     |      Return whether object supports random access.
     |      
     |      If False, seek(), tell() and truncate() will raise OSError.
     |      This method may need to do a test seek().
     |  
     |  writable(self)
     |      Return whether object was opened for writing.
     |      
     |      If False, write() will raise OSError.
     |  
     |  write(self, data)
     |      Write the given buffer to the IO stream.
     |      
     |      Returns the number of bytes written, which is always the length of b
     |      in bytes.
     |      
     |      Raises BlockingIOError if the buffer is full and the
     |      underlying raw stream cannot accept more data at the moment.
     |  
     |  ----------------------------------------------------------------------
     |  Readonly properties inherited from gzip.GzipFile:
     |  
     |  closed
     |  
     |  filename
     |  
     |  mtime
     |      Last modification time read from stream, or None
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes inherited from gzip.GzipFile:
     |  
     |  myfileobj = None
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from _io._BufferedIOBase:
     |  
     |  detach(self, /)
     |      Disconnect this buffer from its underlying raw stream and return it.
     |      
     |      After the raw stream has been detached, the buffer is in an unusable
     |      state.
     |  
     |  readinto(self, buffer, /)
     |  
     |  readinto1(self, buffer, /)
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from _io._IOBase:
     |  
     |  __del__(...)
     |  
     |  __enter__(...)
     |  
     |  __exit__(...)
     |  
     |  __iter__(self, /)
     |      Implement iter(self).
     |  
     |  __next__(self, /)
     |      Implement next(self).
     |  
     |  isatty(self, /)
     |      Return whether this is an 'interactive' stream.
     |      
     |      Return False if it can't be determined.
     |  
     |  readlines(self, hint=-1, /)
     |      Return a list of lines from the stream.
     |      
     |      hint can be specified to control the number of lines read: no more
     |      lines will be read if the total size (in bytes/characters) of all
     |      lines so far exceeds hint.
     |  
     |  tell(self, /)
     |      Return current stream position.
     |  
     |  truncate(...)
     |      Truncate file to size bytes.
     |      
     |      File pointer is left unchanged.  Size defaults to the current IO
     |      position as reported by tell().  Returns the new size.
     |  
     |  writelines(self, lines, /)
     |      Write a list of lines to stream.
     |      
     |      Line separators are not added, so it is usual for each of the
     |      lines provided to have a line separator at the end.
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from _io._IOBase:
     |  
     |  __new__(*args, **kwargs) from builtins.type
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from _io._IOBase:
     |  
     |  __dict__
    
    class HTTPDownloader(threading.Thread)
     |  HTTPDownloader(i, request, start, timeout, opener=None, shutdown_event=None)
     |  
     |  Thread class for retrieving a URL
     |  
     |  Method resolution order:
     |      HTTPDownloader
     |      threading.Thread
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __init__(self, i, request, start, timeout, opener=None, shutdown_event=None)
     |      This constructor should always be called with keyword arguments. Arguments are:
     |      
     |      *group* should be None; reserved for future extension when a ThreadGroup
     |      class is implemented.
     |      
     |      *target* is the callable object to be invoked by the run()
     |      method. Defaults to None, meaning nothing is called.
     |      
     |      *name* is the thread name. By default, a unique name is constructed of
     |      the form "Thread-N" where N is a small decimal number.
     |      
     |      *args* is the argument tuple for the target invocation. Defaults to ().
     |      
     |      *kwargs* is a dictionary of keyword arguments for the target
     |      invocation. Defaults to {}.
     |      
     |      If a subclass overrides the constructor, it must make sure to invoke
     |      the base class constructor (Thread.__init__()) before doing anything
     |      else to the thread.
     |  
     |  run(self)
     |      Method representing the thread's activity.
     |      
     |      You may override this method in a subclass. The standard run() method
     |      invokes the callable object passed to the object's constructor as the
     |      target argument, if any, with sequential and keyword arguments taken
     |      from the args and kwargs arguments, respectively.
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from threading.Thread:
     |  
     |  __repr__(self)
     |      Return repr(self).
     |  
     |  getName(self)
     |  
     |  isDaemon(self)
     |  
     |  is_alive(self)
     |      Return whether the thread is alive.
     |      
     |      This method returns True just before the run() method starts until just
     |      after the run() method terminates. The module function enumerate()
     |      returns a list of all alive threads.
     |  
     |  join(self, timeout=None)
     |      Wait until the thread terminates.
     |      
     |      This blocks the calling thread until the thread whose join() method is
     |      called terminates -- either normally or through an unhandled exception
     |      or until the optional timeout occurs.
     |      
     |      When the timeout argument is present and not None, it should be a
     |      floating point number specifying a timeout for the operation in seconds
     |      (or fractions thereof). As join() always returns None, you must call
     |      is_alive() after join() to decide whether a timeout happened -- if the
     |      thread is still alive, the join() call timed out.
     |      
     |      When the timeout argument is not present or None, the operation will
     |      block until the thread terminates.
     |      
     |      A thread can be join()ed many times.
     |      
     |      join() raises a RuntimeError if an attempt is made to join the current
     |      thread as that would cause a deadlock. It is also an error to join() a
     |      thread before it has been started and attempts to do so raises the same
     |      exception.
     |  
     |  setDaemon(self, daemonic)
     |  
     |  setName(self, name)
     |  
     |  start(self)
     |      Start the thread's activity.
     |      
     |      It must be called at most once per thread object. It arranges for the
     |      object's run() method to be invoked in a separate thread of control.
     |      
     |      This method will raise a RuntimeError if called more than once on the
     |      same thread object.
     |  
     |  ----------------------------------------------------------------------
     |  Readonly properties inherited from threading.Thread:
     |  
     |  ident
     |      Thread identifier of this thread or None if it has not been started.
     |      
     |      This is a nonzero integer. See the get_ident() function. Thread
     |      identifiers may be recycled when a thread exits and another thread is
     |      created. The identifier is available even after the thread has exited.
     |  
     |  native_id
     |      Native integral thread ID of this thread, or None if it has not been started.
     |      
     |      This is a non-negative integer. See the get_native_id() function.
     |      This represents the Thread ID as reported by the kernel.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from threading.Thread:
     |  
     |  __dict__
     |      dictionary for instance variables (if defined)
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
     |  
     |  daemon
     |      A boolean value indicating whether this thread is a daemon thread.
     |      
     |      This must be set before start() is called, otherwise RuntimeError is
     |      raised. Its initial value is inherited from the creating thread; the
     |      main thread is not a daemon thread and therefore all threads created in
     |      the main thread default to daemon = False.
     |      
     |      The entire Python program exits when only daemon threads are left.
     |  
     |  name
     |      A string used for identification purposes only.
     |      
     |      It has no semantics. Multiple threads may be given the same name. The
     |      initial name is set by the constructor.
    
    class HTTPUploader(threading.Thread)
     |  HTTPUploader(i, request, start, size, timeout, opener=None, shutdown_event=None)
     |  
     |  Thread class for putting a URL
     |  
     |  Method resolution order:
     |      HTTPUploader
     |      threading.Thread
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __init__(self, i, request, start, size, timeout, opener=None, shutdown_event=None)
     |      This constructor should always be called with keyword arguments. Arguments are:
     |      
     |      *group* should be None; reserved for future extension when a ThreadGroup
     |      class is implemented.
     |      
     |      *target* is the callable object to be invoked by the run()
     |      method. Defaults to None, meaning nothing is called.
     |      
     |      *name* is the thread name. By default, a unique name is constructed of
     |      the form "Thread-N" where N is a small decimal number.
     |      
     |      *args* is the argument tuple for the target invocation. Defaults to ().
     |      
     |      *kwargs* is a dictionary of keyword arguments for the target
     |      invocation. Defaults to {}.
     |      
     |      If a subclass overrides the constructor, it must make sure to invoke
     |      the base class constructor (Thread.__init__()) before doing anything
     |      else to the thread.
     |  
     |  run(self)
     |      Method representing the thread's activity.
     |      
     |      You may override this method in a subclass. The standard run() method
     |      invokes the callable object passed to the object's constructor as the
     |      target argument, if any, with sequential and keyword arguments taken
     |      from the args and kwargs arguments, respectively.
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from threading.Thread:
     |  
     |  __repr__(self)
     |      Return repr(self).
     |  
     |  getName(self)
     |  
     |  isDaemon(self)
     |  
     |  is_alive(self)
     |      Return whether the thread is alive.
     |      
     |      This method returns True just before the run() method starts until just
     |      after the run() method terminates. The module function enumerate()
     |      returns a list of all alive threads.
     |  
     |  join(self, timeout=None)
     |      Wait until the thread terminates.
     |      
     |      This blocks the calling thread until the thread whose join() method is
     |      called terminates -- either normally or through an unhandled exception
     |      or until the optional timeout occurs.
     |      
     |      When the timeout argument is present and not None, it should be a
     |      floating point number specifying a timeout for the operation in seconds
     |      (or fractions thereof). As join() always returns None, you must call
     |      is_alive() after join() to decide whether a timeout happened -- if the
     |      thread is still alive, the join() call timed out.
     |      
     |      When the timeout argument is not present or None, the operation will
     |      block until the thread terminates.
     |      
     |      A thread can be join()ed many times.
     |      
     |      join() raises a RuntimeError if an attempt is made to join the current
     |      thread as that would cause a deadlock. It is also an error to join() a
     |      thread before it has been started and attempts to do so raises the same
     |      exception.
     |  
     |  setDaemon(self, daemonic)
     |  
     |  setName(self, name)
     |  
     |  start(self)
     |      Start the thread's activity.
     |      
     |      It must be called at most once per thread object. It arranges for the
     |      object's run() method to be invoked in a separate thread of control.
     |      
     |      This method will raise a RuntimeError if called more than once on the
     |      same thread object.
     |  
     |  ----------------------------------------------------------------------
     |  Readonly properties inherited from threading.Thread:
     |  
     |  ident
     |      Thread identifier of this thread or None if it has not been started.
     |      
     |      This is a nonzero integer. See the get_ident() function. Thread
     |      identifiers may be recycled when a thread exits and another thread is
     |      created. The identifier is available even after the thread has exited.
     |  
     |  native_id
     |      Native integral thread ID of this thread, or None if it has not been started.
     |      
     |      This is a non-negative integer. See the get_native_id() function.
     |      This represents the Thread ID as reported by the kernel.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from threading.Thread:
     |  
     |  __dict__
     |      dictionary for instance variables (if defined)
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
     |  
     |  daemon
     |      A boolean value indicating whether this thread is a daemon thread.
     |      
     |      This must be set before start() is called, otherwise RuntimeError is
     |      raised. Its initial value is inherited from the creating thread; the
     |      main thread is not a daemon thread and therefore all threads created in
     |      the main thread default to daemon = False.
     |      
     |      The entire Python program exits when only daemon threads are left.
     |  
     |  name
     |      A string used for identification purposes only.
     |      
     |      It has no semantics. Multiple threads may be given the same name. The
     |      initial name is set by the constructor.
    
    class HTTPUploaderData(builtins.object)
     |  HTTPUploaderData(length, start, timeout, shutdown_event=None)
     |  
     |  File like object to improve cutting off the upload once the timeout
     |  has been reached
     |  
     |  Methods defined here:
     |  
     |  __init__(self, length, start, timeout, shutdown_event=None)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  __len__(self)
     |  
     |  pre_allocate(self)
     |  
     |  read(self, n=10240)
     |  
     |  ----------------------------------------------------------------------
     |  Readonly properties defined here:
     |  
     |  data
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  __dict__
     |      dictionary for instance variables (if defined)
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
    
    class InvalidServerIDType(SpeedtestException)
     |  Server ID used for filtering was not an integer
     |  
     |  Method resolution order:
     |      InvalidServerIDType
     |      SpeedtestException
     |      builtins.Exception
     |      builtins.BaseException
     |      builtins.object
     |  
     |  Data descriptors inherited from SpeedtestException:
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from builtins.Exception:
     |  
     |  __init__(self, /, *args, **kwargs)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from builtins.Exception:
     |  
     |  __new__(*args, **kwargs) from builtins.type
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from builtins.BaseException:
     |  
     |  __delattr__(self, name, /)
     |      Implement delattr(self, name).
     |  
     |  __getattribute__(self, name, /)
     |      Return getattr(self, name).
     |  
     |  __reduce__(...)
     |      Helper for pickle.
     |  
     |  __repr__(self, /)
     |      Return repr(self).
     |  
     |  __setattr__(self, name, value, /)
     |      Implement setattr(self, name, value).
     |  
     |  __setstate__(...)
     |  
     |  __str__(self, /)
     |      Return str(self).
     |  
     |  with_traceback(...)
     |      Exception.with_traceback(tb) --
     |      set self.__traceback__ to tb and return self.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from builtins.BaseException:
     |  
     |  __cause__
     |      exception cause
     |  
     |  __context__
     |      exception context
     |  
     |  __dict__
     |  
     |  __suppress_context__
     |  
     |  __traceback__
     |  
     |  args
    
    class InvalidSpeedtestMiniServer(SpeedtestException)
     |  Server provided as a speedtest mini server does not actually appear
     |  to be a speedtest mini server
     |  
     |  Method resolution order:
     |      InvalidSpeedtestMiniServer
     |      SpeedtestException
     |      builtins.Exception
     |      builtins.BaseException
     |      builtins.object
     |  
     |  Data descriptors inherited from SpeedtestException:
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from builtins.Exception:
     |  
     |  __init__(self, /, *args, **kwargs)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from builtins.Exception:
     |  
     |  __new__(*args, **kwargs) from builtins.type
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from builtins.BaseException:
     |  
     |  __delattr__(self, name, /)
     |      Implement delattr(self, name).
     |  
     |  __getattribute__(self, name, /)
     |      Return getattr(self, name).
     |  
     |  __reduce__(...)
     |      Helper for pickle.
     |  
     |  __repr__(self, /)
     |      Return repr(self).
     |  
     |  __setattr__(self, name, value, /)
     |      Implement setattr(self, name, value).
     |  
     |  __setstate__(...)
     |  
     |  __str__(self, /)
     |      Return str(self).
     |  
     |  with_traceback(...)
     |      Exception.with_traceback(tb) --
     |      set self.__traceback__ to tb and return self.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from builtins.BaseException:
     |  
     |  __cause__
     |      exception cause
     |  
     |  __context__
     |      exception context
     |  
     |  __dict__
     |  
     |  __suppress_context__
     |  
     |  __traceback__
     |  
     |  args
    
    class NoMatchedServers(SpeedtestException)
     |  No servers matched when filtering
     |  
     |  Method resolution order:
     |      NoMatchedServers
     |      SpeedtestException
     |      builtins.Exception
     |      builtins.BaseException
     |      builtins.object
     |  
     |  Data descriptors inherited from SpeedtestException:
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from builtins.Exception:
     |  
     |  __init__(self, /, *args, **kwargs)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from builtins.Exception:
     |  
     |  __new__(*args, **kwargs) from builtins.type
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from builtins.BaseException:
     |  
     |  __delattr__(self, name, /)
     |      Implement delattr(self, name).
     |  
     |  __getattribute__(self, name, /)
     |      Return getattr(self, name).
     |  
     |  __reduce__(...)
     |      Helper for pickle.
     |  
     |  __repr__(self, /)
     |      Return repr(self).
     |  
     |  __setattr__(self, name, value, /)
     |      Implement setattr(self, name, value).
     |  
     |  __setstate__(...)
     |  
     |  __str__(self, /)
     |      Return str(self).
     |  
     |  with_traceback(...)
     |      Exception.with_traceback(tb) --
     |      set self.__traceback__ to tb and return self.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from builtins.BaseException:
     |  
     |  __cause__
     |      exception cause
     |  
     |  __context__
     |      exception context
     |  
     |  __dict__
     |  
     |  __suppress_context__
     |  
     |  __traceback__
     |  
     |  args
    
    class ServersRetrievalError(SpeedtestHTTPError)
     |  Could not retrieve speedtest-servers.php
     |  
     |  Method resolution order:
     |      ServersRetrievalError
     |      SpeedtestHTTPError
     |      SpeedtestException
     |      builtins.Exception
     |      builtins.BaseException
     |      builtins.object
     |  
     |  Data descriptors inherited from SpeedtestException:
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from builtins.Exception:
     |  
     |  __init__(self, /, *args, **kwargs)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from builtins.Exception:
     |  
     |  __new__(*args, **kwargs) from builtins.type
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from builtins.BaseException:
     |  
     |  __delattr__(self, name, /)
     |      Implement delattr(self, name).
     |  
     |  __getattribute__(self, name, /)
     |      Return getattr(self, name).
     |  
     |  __reduce__(...)
     |      Helper for pickle.
     |  
     |  __repr__(self, /)
     |      Return repr(self).
     |  
     |  __setattr__(self, name, value, /)
     |      Implement setattr(self, name, value).
     |  
     |  __setstate__(...)
     |  
     |  __str__(self, /)
     |      Return str(self).
     |  
     |  with_traceback(...)
     |      Exception.with_traceback(tb) --
     |      set self.__traceback__ to tb and return self.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from builtins.BaseException:
     |  
     |  __cause__
     |      exception cause
     |  
     |  __context__
     |      exception context
     |  
     |  __dict__
     |  
     |  __suppress_context__
     |  
     |  __traceback__
     |  
     |  args
    
    class ShareResultsConnectFailure(SpeedtestException)
     |  Could not connect to speedtest.net API to POST results
     |  
     |  Method resolution order:
     |      ShareResultsConnectFailure
     |      SpeedtestException
     |      builtins.Exception
     |      builtins.BaseException
     |      builtins.object
     |  
     |  Data descriptors inherited from SpeedtestException:
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from builtins.Exception:
     |  
     |  __init__(self, /, *args, **kwargs)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from builtins.Exception:
     |  
     |  __new__(*args, **kwargs) from builtins.type
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from builtins.BaseException:
     |  
     |  __delattr__(self, name, /)
     |      Implement delattr(self, name).
     |  
     |  __getattribute__(self, name, /)
     |      Return getattr(self, name).
     |  
     |  __reduce__(...)
     |      Helper for pickle.
     |  
     |  __repr__(self, /)
     |      Return repr(self).
     |  
     |  __setattr__(self, name, value, /)
     |      Implement setattr(self, name, value).
     |  
     |  __setstate__(...)
     |  
     |  __str__(self, /)
     |      Return str(self).
     |  
     |  with_traceback(...)
     |      Exception.with_traceback(tb) --
     |      set self.__traceback__ to tb and return self.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from builtins.BaseException:
     |  
     |  __cause__
     |      exception cause
     |  
     |  __context__
     |      exception context
     |  
     |  __dict__
     |  
     |  __suppress_context__
     |  
     |  __traceback__
     |  
     |  args
    
    class ShareResultsSubmitFailure(SpeedtestException)
     |  Unable to successfully POST results to speedtest.net API after
     |  connection
     |  
     |  Method resolution order:
     |      ShareResultsSubmitFailure
     |      SpeedtestException
     |      builtins.Exception
     |      builtins.BaseException
     |      builtins.object
     |  
     |  Data descriptors inherited from SpeedtestException:
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from builtins.Exception:
     |  
     |  __init__(self, /, *args, **kwargs)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from builtins.Exception:
     |  
     |  __new__(*args, **kwargs) from builtins.type
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from builtins.BaseException:
     |  
     |  __delattr__(self, name, /)
     |      Implement delattr(self, name).
     |  
     |  __getattribute__(self, name, /)
     |      Return getattr(self, name).
     |  
     |  __reduce__(...)
     |      Helper for pickle.
     |  
     |  __repr__(self, /)
     |      Return repr(self).
     |  
     |  __setattr__(self, name, value, /)
     |      Implement setattr(self, name, value).
     |  
     |  __setstate__(...)
     |  
     |  __str__(self, /)
     |      Return str(self).
     |  
     |  with_traceback(...)
     |      Exception.with_traceback(tb) --
     |      set self.__traceback__ to tb and return self.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from builtins.BaseException:
     |  
     |  __cause__
     |      exception cause
     |  
     |  __context__
     |      exception context
     |  
     |  __dict__
     |  
     |  __suppress_context__
     |  
     |  __traceback__
     |  
     |  args
    
    class Speedtest(builtins.object)
     |  Speedtest(config=None, source_address=None, timeout=10, secure=False, shutdown_event=None)
     |  
     |  Class for performing standard speedtest.net testing operations
     |  
     |  Methods defined here:
     |  
     |  __init__(self, config=None, source_address=None, timeout=10, secure=False, shutdown_event=None)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  download(self, callback=<function do_nothing at 0xffffaf069c10>, threads=None)
     |      Test download speed against speedtest.net
     |      
     |      A ``threads`` value of ``None`` will fall back to those dictated
     |      by the speedtest.net configuration
     |  
     |  get_best_server(self, servers=None)
     |      Perform a speedtest.net "ping" to determine which speedtest.net
     |      server has the lowest latency
     |  
     |  get_closest_servers(self, limit=5)
     |      Limit servers to the closest speedtest.net servers based on
     |      geographic distance
     |  
     |  get_config(self)
     |      Download the speedtest.net configuration and return only the data
     |      we are interested in
     |  
     |  get_servers(self, servers=None, exclude=None)
     |      Retrieve a the list of speedtest.net servers, optionally filtered
     |      to servers matching those specified in the ``servers`` argument
     |  
     |  set_mini_server(self, server)
     |      Instead of querying for a list of servers, set a link to a
     |      speedtest mini server
     |  
     |  upload(self, callback=<function do_nothing at 0xffffaf069c10>, pre_allocate=True, threads=None)
     |      Test upload speed against speedtest.net
     |      
     |      A ``threads`` value of ``None`` will fall back to those dictated
     |      by the speedtest.net configuration
     |  
     |  ----------------------------------------------------------------------
     |  Readonly properties defined here:
     |  
     |  best
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  __dict__
     |      dictionary for instance variables (if defined)
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
    
    class SpeedtestBestServerFailure(SpeedtestException)
     |  Unable to determine best server
     |  
     |  Method resolution order:
     |      SpeedtestBestServerFailure
     |      SpeedtestException
     |      builtins.Exception
     |      builtins.BaseException
     |      builtins.object
     |  
     |  Data descriptors inherited from SpeedtestException:
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from builtins.Exception:
     |  
     |  __init__(self, /, *args, **kwargs)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from builtins.Exception:
     |  
     |  __new__(*args, **kwargs) from builtins.type
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from builtins.BaseException:
     |  
     |  __delattr__(self, name, /)
     |      Implement delattr(self, name).
     |  
     |  __getattribute__(self, name, /)
     |      Return getattr(self, name).
     |  
     |  __reduce__(...)
     |      Helper for pickle.
     |  
     |  __repr__(self, /)
     |      Return repr(self).
     |  
     |  __setattr__(self, name, value, /)
     |      Implement setattr(self, name, value).
     |  
     |  __setstate__(...)
     |  
     |  __str__(self, /)
     |      Return str(self).
     |  
     |  with_traceback(...)
     |      Exception.with_traceback(tb) --
     |      set self.__traceback__ to tb and return self.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from builtins.BaseException:
     |  
     |  __cause__
     |      exception cause
     |  
     |  __context__
     |      exception context
     |  
     |  __dict__
     |  
     |  __suppress_context__
     |  
     |  __traceback__
     |  
     |  args
    
    class SpeedtestCLIError(SpeedtestException)
     |  Generic exception for raising errors during CLI operation
     |  
     |  Method resolution order:
     |      SpeedtestCLIError
     |      SpeedtestException
     |      builtins.Exception
     |      builtins.BaseException
     |      builtins.object
     |  
     |  Data descriptors inherited from SpeedtestException:
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from builtins.Exception:
     |  
     |  __init__(self, /, *args, **kwargs)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from builtins.Exception:
     |  
     |  __new__(*args, **kwargs) from builtins.type
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from builtins.BaseException:
     |  
     |  __delattr__(self, name, /)
     |      Implement delattr(self, name).
     |  
     |  __getattribute__(self, name, /)
     |      Return getattr(self, name).
     |  
     |  __reduce__(...)
     |      Helper for pickle.
     |  
     |  __repr__(self, /)
     |      Return repr(self).
     |  
     |  __setattr__(self, name, value, /)
     |      Implement setattr(self, name, value).
     |  
     |  __setstate__(...)
     |  
     |  __str__(self, /)
     |      Return str(self).
     |  
     |  with_traceback(...)
     |      Exception.with_traceback(tb) --
     |      set self.__traceback__ to tb and return self.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from builtins.BaseException:
     |  
     |  __cause__
     |      exception cause
     |  
     |  __context__
     |      exception context
     |  
     |  __dict__
     |  
     |  __suppress_context__
     |  
     |  __traceback__
     |  
     |  args
    
    class SpeedtestConfigError(SpeedtestException)
     |  Configuration XML is invalid
     |  
     |  Method resolution order:
     |      SpeedtestConfigError
     |      SpeedtestException
     |      builtins.Exception
     |      builtins.BaseException
     |      builtins.object
     |  
     |  Data descriptors inherited from SpeedtestException:
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from builtins.Exception:
     |  
     |  __init__(self, /, *args, **kwargs)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from builtins.Exception:
     |  
     |  __new__(*args, **kwargs) from builtins.type
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from builtins.BaseException:
     |  
     |  __delattr__(self, name, /)
     |      Implement delattr(self, name).
     |  
     |  __getattribute__(self, name, /)
     |      Return getattr(self, name).
     |  
     |  __reduce__(...)
     |      Helper for pickle.
     |  
     |  __repr__(self, /)
     |      Return repr(self).
     |  
     |  __setattr__(self, name, value, /)
     |      Implement setattr(self, name, value).
     |  
     |  __setstate__(...)
     |  
     |  __str__(self, /)
     |      Return str(self).
     |  
     |  with_traceback(...)
     |      Exception.with_traceback(tb) --
     |      set self.__traceback__ to tb and return self.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from builtins.BaseException:
     |  
     |  __cause__
     |      exception cause
     |  
     |  __context__
     |      exception context
     |  
     |  __dict__
     |  
     |  __suppress_context__
     |  
     |  __traceback__
     |  
     |  args
    
    class SpeedtestException(builtins.Exception)
     |  Base exception for this module
     |  
     |  Method resolution order:
     |      SpeedtestException
     |      builtins.Exception
     |      builtins.BaseException
     |      builtins.object
     |  
     |  Data descriptors defined here:
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from builtins.Exception:
     |  
     |  __init__(self, /, *args, **kwargs)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from builtins.Exception:
     |  
     |  __new__(*args, **kwargs) from builtins.type
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from builtins.BaseException:
     |  
     |  __delattr__(self, name, /)
     |      Implement delattr(self, name).
     |  
     |  __getattribute__(self, name, /)
     |      Return getattr(self, name).
     |  
     |  __reduce__(...)
     |      Helper for pickle.
     |  
     |  __repr__(self, /)
     |      Return repr(self).
     |  
     |  __setattr__(self, name, value, /)
     |      Implement setattr(self, name, value).
     |  
     |  __setstate__(...)
     |  
     |  __str__(self, /)
     |      Return str(self).
     |  
     |  with_traceback(...)
     |      Exception.with_traceback(tb) --
     |      set self.__traceback__ to tb and return self.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from builtins.BaseException:
     |  
     |  __cause__
     |      exception cause
     |  
     |  __context__
     |      exception context
     |  
     |  __dict__
     |  
     |  __suppress_context__
     |  
     |  __traceback__
     |  
     |  args
    
    class SpeedtestHTTPConnection(http.client.HTTPConnection)
     |  SpeedtestHTTPConnection(*args, **kwargs)
     |  
     |  Custom HTTPConnection to support source_address across
     |  Python 2.4 - Python 3
     |  
     |  Method resolution order:
     |      SpeedtestHTTPConnection
     |      http.client.HTTPConnection
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __init__(self, *args, **kwargs)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  connect(self)
     |      Connect to the host and port specified in __init__.
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from http.client.HTTPConnection:
     |  
     |  close(self)
     |      Close the connection to the HTTP server.
     |  
     |  endheaders(self, message_body=None, *, encode_chunked=False)
     |      Indicate that the last header line has been sent to the server.
     |      
     |      This method sends the request to the server.  The optional message_body
     |      argument can be used to pass a message body associated with the
     |      request.
     |  
     |  getresponse(self)
     |      Get the response from the server.
     |      
     |      If the HTTPConnection is in the correct state, returns an
     |      instance of HTTPResponse or of whatever object is returned by
     |      the response_class variable.
     |      
     |      If a request has not been sent or if a previous response has
     |      not be handled, ResponseNotReady is raised.  If the HTTP
     |      response indicates that the connection should be closed, then
     |      it will be closed before the response is returned.  When the
     |      connection is closed, the underlying socket is closed.
     |  
     |  putheader(self, header, *values)
     |      Send a request header line to the server.
     |      
     |      For example: h.putheader('Accept', 'text/html')
     |  
     |  putrequest(self, method, url, skip_host=False, skip_accept_encoding=False)
     |      Send a request to the server.
     |      
     |      `method' specifies an HTTP request method, e.g. 'GET'.
     |      `url' specifies the object being requested, e.g. '/index.html'.
     |      `skip_host' if True does not add automatically a 'Host:' header
     |      `skip_accept_encoding' if True does not add automatically an
     |         'Accept-Encoding:' header
     |  
     |  request(self, method, url, body=None, headers={}, *, encode_chunked=False)
     |      Send a complete request to the server.
     |  
     |  send(self, data)
     |      Send `data' to the server.
     |      ``data`` can be a string object, a bytes object, an array object, a
     |      file-like object that supports a .read() method, or an iterable object.
     |  
     |  set_debuglevel(self, level)
     |  
     |  set_tunnel(self, host, port=None, headers=None)
     |      Set up host and port for HTTP CONNECT tunnelling.
     |      
     |      In a connection that uses HTTP CONNECT tunneling, the host passed to the
     |      constructor is used as a proxy server that relays all communication to
     |      the endpoint passed to `set_tunnel`. This done by sending an HTTP
     |      CONNECT request to the proxy server when the connection is established.
     |      
     |      This method must be called before the HTTP connection has been
     |      established.
     |      
     |      The headers argument should be a mapping of extra HTTP headers to send
     |      with the CONNECT request.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from http.client.HTTPConnection:
     |  
     |  __dict__
     |      dictionary for instance variables (if defined)
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes inherited from http.client.HTTPConnection:
     |  
     |  auto_open = 1
     |  
     |  debuglevel = 0
     |  
     |  default_port = 80
     |  
     |  response_class = <class 'http.client.HTTPResponse'>
    
    class SpeedtestHTTPError(SpeedtestException)
     |  Base HTTP exception for this module
     |  
     |  Method resolution order:
     |      SpeedtestHTTPError
     |      SpeedtestException
     |      builtins.Exception
     |      builtins.BaseException
     |      builtins.object
     |  
     |  Data descriptors inherited from SpeedtestException:
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from builtins.Exception:
     |  
     |  __init__(self, /, *args, **kwargs)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from builtins.Exception:
     |  
     |  __new__(*args, **kwargs) from builtins.type
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from builtins.BaseException:
     |  
     |  __delattr__(self, name, /)
     |      Implement delattr(self, name).
     |  
     |  __getattribute__(self, name, /)
     |      Return getattr(self, name).
     |  
     |  __reduce__(...)
     |      Helper for pickle.
     |  
     |  __repr__(self, /)
     |      Return repr(self).
     |  
     |  __setattr__(self, name, value, /)
     |      Implement setattr(self, name, value).
     |  
     |  __setstate__(...)
     |  
     |  __str__(self, /)
     |      Return str(self).
     |  
     |  with_traceback(...)
     |      Exception.with_traceback(tb) --
     |      set self.__traceback__ to tb and return self.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from builtins.BaseException:
     |  
     |  __cause__
     |      exception cause
     |  
     |  __context__
     |      exception context
     |  
     |  __dict__
     |  
     |  __suppress_context__
     |  
     |  __traceback__
     |  
     |  args
    
    class SpeedtestHTTPHandler(urllib.request.AbstractHTTPHandler)
     |  SpeedtestHTTPHandler(debuglevel=0, source_address=None, timeout=10)
     |  
     |  Custom ``HTTPHandler`` that can build a ``HTTPConnection`` with the
     |  args we need for ``source_address`` and ``timeout``
     |  
     |  Method resolution order:
     |      SpeedtestHTTPHandler
     |      urllib.request.AbstractHTTPHandler
     |      urllib.request.BaseHandler
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __init__(self, debuglevel=0, source_address=None, timeout=10)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  http_open(self, req)
     |  
     |  http_request = do_request_(self, request)
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from urllib.request.AbstractHTTPHandler:
     |  
     |  do_open(self, http_class, req, **http_conn_args)
     |      Return an HTTPResponse object for the request, using http_class.
     |      
     |      http_class must implement the HTTPConnection API from http.client.
     |  
     |  do_request_(self, request)
     |  
     |  set_http_debuglevel(self, level)
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from urllib.request.BaseHandler:
     |  
     |  __lt__(self, other)
     |      Return self<value.
     |  
     |  add_parent(self, parent)
     |  
     |  close(self)
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from urllib.request.BaseHandler:
     |  
     |  __dict__
     |      dictionary for instance variables (if defined)
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes inherited from urllib.request.BaseHandler:
     |  
     |  handler_order = 500
    
    class SpeedtestHTTPSConnection(http.client.HTTPSConnection)
     |  SpeedtestHTTPSConnection(*args, **kwargs)
     |  
     |  Custom HTTPSConnection to support source_address across
     |  Python 2.4 - Python 3
     |  
     |  Method resolution order:
     |      SpeedtestHTTPSConnection
     |      http.client.HTTPSConnection
     |      http.client.HTTPConnection
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __init__(self, *args, **kwargs)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  connect(self)
     |      Connect to a host on a given (SSL) port.
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes defined here:
     |  
     |  default_port = 443
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from http.client.HTTPConnection:
     |  
     |  close(self)
     |      Close the connection to the HTTP server.
     |  
     |  endheaders(self, message_body=None, *, encode_chunked=False)
     |      Indicate that the last header line has been sent to the server.
     |      
     |      This method sends the request to the server.  The optional message_body
     |      argument can be used to pass a message body associated with the
     |      request.
     |  
     |  getresponse(self)
     |      Get the response from the server.
     |      
     |      If the HTTPConnection is in the correct state, returns an
     |      instance of HTTPResponse or of whatever object is returned by
     |      the response_class variable.
     |      
     |      If a request has not been sent or if a previous response has
     |      not be handled, ResponseNotReady is raised.  If the HTTP
     |      response indicates that the connection should be closed, then
     |      it will be closed before the response is returned.  When the
     |      connection is closed, the underlying socket is closed.
     |  
     |  putheader(self, header, *values)
     |      Send a request header line to the server.
     |      
     |      For example: h.putheader('Accept', 'text/html')
     |  
     |  putrequest(self, method, url, skip_host=False, skip_accept_encoding=False)
     |      Send a request to the server.
     |      
     |      `method' specifies an HTTP request method, e.g. 'GET'.
     |      `url' specifies the object being requested, e.g. '/index.html'.
     |      `skip_host' if True does not add automatically a 'Host:' header
     |      `skip_accept_encoding' if True does not add automatically an
     |         'Accept-Encoding:' header
     |  
     |  request(self, method, url, body=None, headers={}, *, encode_chunked=False)
     |      Send a complete request to the server.
     |  
     |  send(self, data)
     |      Send `data' to the server.
     |      ``data`` can be a string object, a bytes object, an array object, a
     |      file-like object that supports a .read() method, or an iterable object.
     |  
     |  set_debuglevel(self, level)
     |  
     |  set_tunnel(self, host, port=None, headers=None)
     |      Set up host and port for HTTP CONNECT tunnelling.
     |      
     |      In a connection that uses HTTP CONNECT tunneling, the host passed to the
     |      constructor is used as a proxy server that relays all communication to
     |      the endpoint passed to `set_tunnel`. This done by sending an HTTP
     |      CONNECT request to the proxy server when the connection is established.
     |      
     |      This method must be called before the HTTP connection has been
     |      established.
     |      
     |      The headers argument should be a mapping of extra HTTP headers to send
     |      with the CONNECT request.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from http.client.HTTPConnection:
     |  
     |  __dict__
     |      dictionary for instance variables (if defined)
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes inherited from http.client.HTTPConnection:
     |  
     |  auto_open = 1
     |  
     |  debuglevel = 0
     |  
     |  response_class = <class 'http.client.HTTPResponse'>
    
    class SpeedtestHTTPSHandler(urllib.request.AbstractHTTPHandler)
     |  SpeedtestHTTPSHandler(debuglevel=0, context=None, source_address=None, timeout=10)
     |  
     |  Custom ``HTTPSHandler`` that can build a ``HTTPSConnection`` with the
     |  args we need for ``source_address`` and ``timeout``
     |  
     |  Method resolution order:
     |      SpeedtestHTTPSHandler
     |      urllib.request.AbstractHTTPHandler
     |      urllib.request.BaseHandler
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __init__(self, debuglevel=0, context=None, source_address=None, timeout=10)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  https_open(self, req)
     |  
     |  https_request = do_request_(self, request)
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from urllib.request.AbstractHTTPHandler:
     |  
     |  do_open(self, http_class, req, **http_conn_args)
     |      Return an HTTPResponse object for the request, using http_class.
     |      
     |      http_class must implement the HTTPConnection API from http.client.
     |  
     |  do_request_(self, request)
     |  
     |  set_http_debuglevel(self, level)
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from urllib.request.BaseHandler:
     |  
     |  __lt__(self, other)
     |      Return self<value.
     |  
     |  add_parent(self, parent)
     |  
     |  close(self)
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from urllib.request.BaseHandler:
     |  
     |  __dict__
     |      dictionary for instance variables (if defined)
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes inherited from urllib.request.BaseHandler:
     |  
     |  handler_order = 500
    
    class SpeedtestMiniConnectFailure(SpeedtestException)
     |  Could not connect to the provided speedtest mini server
     |  
     |  Method resolution order:
     |      SpeedtestMiniConnectFailure
     |      SpeedtestException
     |      builtins.Exception
     |      builtins.BaseException
     |      builtins.object
     |  
     |  Data descriptors inherited from SpeedtestException:
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from builtins.Exception:
     |  
     |  __init__(self, /, *args, **kwargs)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from builtins.Exception:
     |  
     |  __new__(*args, **kwargs) from builtins.type
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from builtins.BaseException:
     |  
     |  __delattr__(self, name, /)
     |      Implement delattr(self, name).
     |  
     |  __getattribute__(self, name, /)
     |      Return getattr(self, name).
     |  
     |  __reduce__(...)
     |      Helper for pickle.
     |  
     |  __repr__(self, /)
     |      Return repr(self).
     |  
     |  __setattr__(self, name, value, /)
     |      Implement setattr(self, name, value).
     |  
     |  __setstate__(...)
     |  
     |  __str__(self, /)
     |      Return str(self).
     |  
     |  with_traceback(...)
     |      Exception.with_traceback(tb) --
     |      set self.__traceback__ to tb and return self.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from builtins.BaseException:
     |  
     |  __cause__
     |      exception cause
     |  
     |  __context__
     |      exception context
     |  
     |  __dict__
     |  
     |  __suppress_context__
     |  
     |  __traceback__
     |  
     |  args
    
    class SpeedtestMissingBestServer(SpeedtestException)
     |  get_best_server not called or not able to determine best server
     |  
     |  Method resolution order:
     |      SpeedtestMissingBestServer
     |      SpeedtestException
     |      builtins.Exception
     |      builtins.BaseException
     |      builtins.object
     |  
     |  Data descriptors inherited from SpeedtestException:
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from builtins.Exception:
     |  
     |  __init__(self, /, *args, **kwargs)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from builtins.Exception:
     |  
     |  __new__(*args, **kwargs) from builtins.type
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from builtins.BaseException:
     |  
     |  __delattr__(self, name, /)
     |      Implement delattr(self, name).
     |  
     |  __getattribute__(self, name, /)
     |      Return getattr(self, name).
     |  
     |  __reduce__(...)
     |      Helper for pickle.
     |  
     |  __repr__(self, /)
     |      Return repr(self).
     |  
     |  __setattr__(self, name, value, /)
     |      Implement setattr(self, name, value).
     |  
     |  __setstate__(...)
     |  
     |  __str__(self, /)
     |      Return str(self).
     |  
     |  with_traceback(...)
     |      Exception.with_traceback(tb) --
     |      set self.__traceback__ to tb and return self.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from builtins.BaseException:
     |  
     |  __cause__
     |      exception cause
     |  
     |  __context__
     |      exception context
     |  
     |  __dict__
     |  
     |  __suppress_context__
     |  
     |  __traceback__
     |  
     |  args
    
    class SpeedtestResults(builtins.object)
     |  SpeedtestResults(download=0, upload=0, ping=0, server=None, client=None, opener=None, secure=False)
     |  
     |  Class for holding the results of a speedtest, including:
     |  
     |  Download speed
     |  Upload speed
     |  Ping/Latency to test server
     |  Data about server that the test was run against
     |  
     |  Additionally this class can return a result data as a dictionary or CSV,
     |  as well as submit a POST of the result data to the speedtest.net API
     |  to get a share results image link.
     |  
     |  Methods defined here:
     |  
     |  __init__(self, download=0, upload=0, ping=0, server=None, client=None, opener=None, secure=False)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  __repr__(self)
     |      Return repr(self).
     |  
     |  csv(self, delimiter=',')
     |      Return data in CSV format
     |  
     |  dict(self)
     |      Return dictionary of result data
     |  
     |  json(self, pretty=False)
     |      Return data in JSON format
     |  
     |  share(self)
     |      POST data to the speedtest.net API to obtain a share results
     |      link
     |  
     |  ----------------------------------------------------------------------
     |  Static methods defined here:
     |  
     |  csv_header(delimiter=',')
     |      Return CSV Headers
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  __dict__
     |      dictionary for instance variables (if defined)
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
    
    class SpeedtestServersError(SpeedtestException)
     |  Servers XML is invalid
     |  
     |  Method resolution order:
     |      SpeedtestServersError
     |      SpeedtestException
     |      builtins.Exception
     |      builtins.BaseException
     |      builtins.object
     |  
     |  Data descriptors inherited from SpeedtestException:
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from builtins.Exception:
     |  
     |  __init__(self, /, *args, **kwargs)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from builtins.Exception:
     |  
     |  __new__(*args, **kwargs) from builtins.type
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from builtins.BaseException:
     |  
     |  __delattr__(self, name, /)
     |      Implement delattr(self, name).
     |  
     |  __getattribute__(self, name, /)
     |      Return getattr(self, name).
     |  
     |  __reduce__(...)
     |      Helper for pickle.
     |  
     |  __repr__(self, /)
     |      Return repr(self).
     |  
     |  __setattr__(self, name, value, /)
     |      Implement setattr(self, name, value).
     |  
     |  __setstate__(...)
     |  
     |  __str__(self, /)
     |      Return str(self).
     |  
     |  with_traceback(...)
     |      Exception.with_traceback(tb) --
     |      set self.__traceback__ to tb and return self.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from builtins.BaseException:
     |  
     |  __cause__
     |      exception cause
     |  
     |  __context__
     |      exception context
     |  
     |  __dict__
     |  
     |  __suppress_context__
     |  
     |  __traceback__
     |  
     |  args
    
    class SpeedtestUploadTimeout(SpeedtestException)
     |  testlength configuration reached during upload
     |  Used to ensure the upload halts when no additional data should be sent
     |  
     |  Method resolution order:
     |      SpeedtestUploadTimeout
     |      SpeedtestException
     |      builtins.Exception
     |      builtins.BaseException
     |      builtins.object
     |  
     |  Data descriptors inherited from SpeedtestException:
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from builtins.Exception:
     |  
     |  __init__(self, /, *args, **kwargs)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from builtins.Exception:
     |  
     |  __new__(*args, **kwargs) from builtins.type
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from builtins.BaseException:
     |  
     |  __delattr__(self, name, /)
     |      Implement delattr(self, name).
     |  
     |  __getattribute__(self, name, /)
     |      Return getattr(self, name).
     |  
     |  __reduce__(...)
     |      Helper for pickle.
     |  
     |  __repr__(self, /)
     |      Return repr(self).
     |  
     |  __setattr__(self, name, value, /)
     |      Implement setattr(self, name, value).
     |  
     |  __setstate__(...)
     |  
     |  __str__(self, /)
     |      Return str(self).
     |  
     |  with_traceback(...)
     |      Exception.with_traceback(tb) --
     |      set self.__traceback__ to tb and return self.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from builtins.BaseException:
     |  
     |  __cause__
     |      exception cause
     |  
     |  __context__
     |      exception context
     |  
     |  __dict__
     |  
     |  __suppress_context__
     |  
     |  __traceback__
     |  
     |  args

FUNCTIONS
    build_opener(source_address=None, timeout=10)
        Function similar to ``urllib2.build_opener`` that will build
        an ``OpenerDirector`` with the explicit handlers we want,
        ``source_address`` for binding, ``timeout`` and our custom
        `User-Agent`
    
    build_request(url, data=None, headers=None, bump='0', secure=False)
        Build a urllib2 request object
        
        This function automatically adds a User-Agent header to all requests
    
    build_user_agent()
        Build a Mozilla/5.0 compatible User-Agent string
    
    catch_request(request, opener=None)
        Helper function to catch common exceptions encountered when
        establishing a connection with a HTTP/HTTPS request
    
    create_connection(address, timeout=<object object at 0xffffafd6aa20>, source_address=None)
        Connect to *address* and return the socket object.
        
        Convenience function.  Connect to *address* (a 2-tuple ``(host,
        port)``) and return the socket object.  Passing the optional
        *timeout* parameter will set the timeout on the socket instance
        before attempting to connect.  If no *timeout* is supplied, the
        global default timeout setting returned by :func:`getdefaulttimeout`
        is used.  If *source_address* is set it must be a tuple of (host, port)
        for the socket to bind as a source address before making the connection.
        An host of '' or port 0 tells the OS to use the default.
        
        Largely vendored from Python 2.7, modified to work with Python 2.4
    
    csv_header(delimiter=',')
        Print the CSV Headers
    
    ctrl_c(shutdown_event)
        Catch Ctrl-C key sequence and set a SHUTDOWN_EVENT for our threaded
        operations
    
    distance(origin, destination)
        Determine distance between 2 sets of [lat,lon] in km
    
    do_nothing(*args, **kwargs)
    
    get_attributes_by_tag_name(dom, tag_name)
        Retrieve an attribute from an XML document and return it in a
        consistent format
        
        Only used with xml.dom.minidom, which is likely only to be used
        with python versions older than 2.5
    
    get_exception()
        Helper function to work with py2.4-py3 for getting the current
        exception in a try/except block
    
    get_response_stream(response)
        Helper function to return either a Gzip reader if
        ``Content-Encoding`` is ``gzip`` otherwise the response itself
    
    main()
    
    md5 = openssl_md5(string=b'', *, usedforsecurity=True)
        Returns a md5 hash object; optionally initialized with a string
    
    parse_args()
        Function to handle building and parsing of command line arguments
    
    print_(*args, **kwargs)
        Wrapper function for py3 to print, with a utf-8 encoded stdout
    
    print_dots(shutdown_event)
        Built in callback function used by Thread classes for printing
        status
    
    printer(string, quiet=False, debug=False, error=False, **kwargs)
        Helper function print a string with various features
    
    shell()
        Run the full speedtest.net test
    
    to_utf8(v)
        No-op encode to utf-8 for py3
    
    validate_optional_args(args)
        Check if an argument was provided that depends on a module that may
        not be part of the Python standard library.
        
        If such an argument is supplied, and the module does not exist, exit
        with an error stating which module is missing.
    
    version()
        Print the version

DATA
    ARG_SUPPRESS = '==SUPPRESS=='
    CERT_ERROR = (<class 'ssl.SSLCertVerificationError'>,)
    DEBUG = False
    FakeSocket = None
    HTTP_ERRORS = (<class 'urllib.error.HTTPError'>, <class 'urllib.error....
    PY25PLUS = True
    PY26PLUS = True
    PY32PLUS = True

VERSION
    2.1.3

FILE
    /home/searge/.cache/pypoetry/virtualenvs/speedstats-nPOjRxEk-py3.9/lib/python3.9/site-packages/speedtest.py

